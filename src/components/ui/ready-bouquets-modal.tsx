"use client";

import React, { useState } from 'react';
import { Button } from './button';

interface ReadyBouquet {
  id: string;
  name: string;
  price: number;
  description: string;
  emoji: string;
  flowers: string[];
  image?: string;
}

interface ReadyBouquetsModalProps {
  isOpen: boolean;
  onClose: () => void;
  onAddToCart: (bouquet: ReadyBouquet) => void;
}

const readyBouquets: ReadyBouquet[] = [
  {
    id: 'romantic-red',
    name: '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –∫—Ä–∞—Å–Ω—ã–π',
    price: 2500,
    description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –±—É–∫–µ—Ç –∏–∑ –∫—Ä–∞—Å–Ω—ã—Ö —Ä–æ–∑ –¥–ª—è –æ—Å–æ–±—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤',
    emoji: 'üåπ',
    flowers: ['15 –∫—Ä–∞—Å–Ω—ã—Ö —Ä–æ–∑', '5 –≤–µ—Ç–æ–∫ —ç–≤–∫–∞–ª–∏–ø—Ç–∞', '–∫—Ä–∞—Å–∏–≤–∞—è —É–ø–∞–∫–æ–≤–∫–∞']
  },
  {
    id: 'spring-mix',
    name: '–í–µ—Å–µ–Ω–Ω–∏–π –º–∏–∫—Å',
    price: 1800,
    description: '–Ø—Ä–∫–∏–π –≤–µ—Å–µ–Ω–Ω–∏–π –±—É–∫–µ—Ç —Å —Ç—é–ª—å–ø–∞–Ω–∞–º–∏ –∏ –Ω–∞—Ä—Ü–∏—Å—Å–∞–º–∏',
    emoji: 'üå∑',
    flowers: ['10 —Ç—é–ª—å–ø–∞–Ω–æ–≤', '7 –Ω–∞—Ä—Ü–∏—Å—Å–æ–≤', '3 –≤–µ—Ç–∫–∏ –º–∏–º–æ–∑—ã', '–∑–µ–ª–µ–Ω—å']
  },
  {
    id: 'gentle-pink',
    name: '–ù–µ–∂–Ω–∞—è —Ä–æ–∑–æ–≤–∞—è –º–µ—á—Ç–∞',
    price: 2200,
    description: '–í–æ–∑–¥—É—à–Ω—ã–π –±—É–∫–µ—Ç –≤ —Ä–æ–∑–æ–≤—ã—Ö —Ç–æ–Ω–∞—Ö –¥–ª—è —É—Ç–æ–Ω—á–µ–Ω–Ω—ã—Ö –Ω–∞—Ç—É—Ä',
    emoji: 'üå∏',
    flowers: ['12 —Ä–æ–∑–æ–≤—ã—Ö —Ä–æ–∑', '8 —Ä–æ–∑–æ–≤—ã—Ö –ø–∏–æ–Ω–æ–≤', '–≥–∏–ø—Å–æ—Ñ–∏–ª–∞', '–∞—Ç–ª–∞—Å–Ω–∞—è –ª–µ–Ω—Ç–∞']
  },
  {
    id: 'sunny-yellow',
    name: '–°–æ–ª–Ω–µ—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ',
    price: 1950,
    description: '–Ø—Ä–∫–∏–π –∂–µ–ª—Ç—ã–π –±—É–∫–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∞—Ä–∏—Ç —Ä–∞–¥–æ—Å—Ç—å –∏ —Ç–µ–ø–ª–æ',
    emoji: 'üåª',
    flowers: ['9 –ø–æ–¥—Å–æ–ª–Ω—É—Ö–æ–≤', '12 –∂–µ–ª—Ç—ã—Ö —Ä–æ–∑', '5 —Ö—Ä–∏–∑–∞–Ω—Ç–µ–º', '–∑–µ–ª–µ–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞']
  },
  {
    id: 'elegant-white',
    name: '–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è –∫–ª–∞—Å—Å–∏–∫–∞',
    price: 2800,
    description: '–ò–∑—ã—Å–∫–∞–Ω–Ω—ã–π –±–µ–ª—ã–π –±—É–∫–µ—Ç –¥–ª—è —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤',
    emoji: 'ü§ç',
    flowers: ['20 –±–µ–ª—ã—Ö —Ä–æ–∑', '10 –±–µ–ª—ã—Ö –ª–∏–ª–∏–π', '–±–µ–ª—ã–µ —Ö—Ä–∏–∑–∞–Ω—Ç–µ–º—ã', '—Å–µ—Ä–µ–±—Ä—è–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞']
  }
];

export function ReadyBouquetsModal({ isOpen, onClose, onAddToCart }: ReadyBouquetsModalProps) {
  const [addedBouquets, setAddedBouquets] = useState<Set<string>>(new Set());

  if (!isOpen) return null;

  const handleAddToCart = (bouquet: ReadyBouquet) => {
    onAddToCart(bouquet);
    setAddedBouquets(prev => new Set([...prev, bouquet.id]));
    
    // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      setAddedBouquets(prev => {
        const newSet = new Set(prev);
        newSet.delete(bouquet.id);
        return newSet;
      });
    }, 2000);
  };

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] flex flex-col">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="p-6 border-b border-gray-200 flex-shrink-0">
          <div className="flex justify-between items-center">
            <h2 className="text-2xl font-bold text-gray-900">üå∫ –ì–æ—Ç–æ–≤—ã–µ –±—É–∫–µ—Ç—ã</h2>
            <button
              onClick={onClose}
              className="text-gray-400 hover:text-gray-600 text-2xl font-bold"
            >
              √ó
            </button>
          </div>
          <p className="text-sm text-gray-600 mt-1">
            –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—à–∏—Ö –≥–æ—Ç–æ–≤—ã—Ö –±—É–∫–µ—Ç–æ–≤
          </p>
        </div>

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
        <div className="flex-1 overflow-y-auto p-6">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {readyBouquets.map((bouquet) => (
              <div key={bouquet.id} className="bg-gray-50 rounded-lg p-4 border border-gray-200 hover:shadow-md transition-shadow">
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±—É–∫–µ—Ç–∞ */}
                <div className="text-center mb-4">
                  <div className="text-4xl mb-2">{bouquet.emoji}</div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-1">
                    {bouquet.name}
                  </h3>
                  <p className="text-sm text-gray-600 mb-3">
                    {bouquet.description}
                  </p>
                  <div className="text-2xl font-bold text-green-600 mb-3">
                    {bouquet.price} ‚ÇΩ
                  </div>
                </div>

                {/* –°–æ—Å—Ç–∞–≤ –±—É–∫–µ—Ç–∞ */}
                <div className="mb-4">
                  <h4 className="text-sm font-semibold text-gray-700 mb-2">–°–æ—Å—Ç–∞–≤:</h4>
                  <ul className="text-xs text-gray-600 space-y-1">
                    {bouquet.flowers.map((flower, index) => (
                      <li key={index} className="flex items-center">
                        <span className="w-1 h-1 bg-gray-400 rounded-full mr-2"></span>
                        {flower}
                      </li>
                    ))}
                  </ul>
                </div>

                {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
                <Button
                  onClick={() => handleAddToCart(bouquet)}
                  className={`w-full py-2 text-white transition-all duration-300 ${
                    addedBouquets.has(bouquet.id)
                      ? 'bg-green-500 hover:bg-green-600 scale-105'
                      : 'bg-blue-600 hover:bg-blue-700'
                  }`}
                >
                  {addedBouquets.has(bouquet.id) ? (
                    <>‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ!</>
                  ) : (
                    <>üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</>
                  )}
                </Button>
              </div>
            ))}
          </div>
        </div>

        {/* –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å */}
        <div className="p-6 border-t border-gray-200 bg-gray-50 flex-shrink-0">
          <div className="flex justify-center">
            <Button
              onClick={onClose}
              variant="outline"
              className="px-8 py-2"
            >
              –ó–∞–∫—Ä—ã—Ç—å
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}