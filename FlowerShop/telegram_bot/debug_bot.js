require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');

const token = process.env.BOT_TOKEN;
const webAppUrl = process.env.WEBAPP_URL;

console.log('Token:', token ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù');
console.log('WebApp URL:', webAppUrl);

if (!token) {
  console.error('‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
  process.exit(1);
}

const bot = new TelegramBot(token, { polling: true });

console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
async function clearAllBotSettings() {
  try {
    console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞...');
    
    // –£–¥–∞–ª—è–µ–º webhook
    await bot.setWebHook('');
    console.log('‚úÖ Webhook —É–¥–∞–ª–µ–Ω');
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã
    await bot.setMyCommands([]);
    console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –æ—á–∏—â–µ–Ω—ã');
    
    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
    await bot.setMyCommands([
      { command: 'start', description: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞' },
      { command: 'clear', description: '–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à' },
      { command: 'newurl', description: '–ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞' }
    ]);
    console.log('‚úÖ –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    
    console.log('üéâ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error.message);
    console.error('–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    return false;
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /clear
bot.onText(/\/clear/, async (msg) => {
  const chatId = msg.chat.id;
  console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /clear –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', chatId);
  
  try {
    await bot.sendMessage(chatId, 'üßπ –ù–∞—á–∏–Ω–∞—é –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞...');
    
    const success = await clearAllBotSettings();
    
    if (success) {
      const clearUrl = `${webAppUrl}?t=${Date.now()}&clear=true`;
      await bot.sendMessage(chatId, '‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã!', {
        reply_markup: {
          inline_keyboard: [[
            { text: 'üå∏ –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥', web_app: { url: clearUrl } }
          ]]
        }
      });
    } else {
      await bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /clear:', error);
    await bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;
  console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', chatId);
  
  const startUrl = `${webAppUrl}?t=${Date.now()}`;
  await bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üå∏', {
    reply_markup: {
      inline_keyboard: [[
        { text: 'üå∏ –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥', web_app: { url: startUrl } }
      ]]
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('error', (error) => {
  console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

bot.on('polling_error', (error) => {
  console.error('–û—à–∏–±–∫–∞ polling:', error);
});